// Generated by LiveScript 1.2.0
var node, list;
node = function(value){
  return {
    value: value,
    remove: function(){
      this.prev.next = this.next;
      this.next.prev = this.prev;
      return this;
    },
    appendValue: function(other){
      var x;
      x = node(other);
      x.prev = this.prev, x.next = this.next;
      return x.prepend(this);
    },
    append: function(x){
      this.next = x;
      this.prev = x.prev;
      this.next.prev = this;
      this.prev.next = this;
      return this;
    },
    prependValue: function(other){
      var x;
      x = node(other);
      x.prev = this.prev, x.next = this.next;
      return x.append(this);
    },
    prepend: function(x){
      this.prev = x;
      this.next = x.next;
      this.prev.next = this;
      this.next.prev = this;
      return this;
    }
  };
};
list = function(values){
  var sentinel, iter, i$, len$, value;
  sentinel = node();
  sentinel.prev = sentinel;
  sentinel.next = sentinel;
  if (values) {
    iter = sentinel;
    for (i$ = 0, len$ = values.length; i$ < len$; ++i$) {
      value = values[i$];
      iter = iter.appendValue(value);
    }
  }
  return {
    head: function(){
      return sentinel.next;
    },
    tail: function(){
      return sentinel.prev;
    },
    push: function(it){
      return sentinel.prependValue(it);
    },
    pop: function(){
      return sentinel.prev.remove();
    },
    isEnd: function(it){
      return sentinel === it;
    }
  };
};
list.node = node;
module.exports = list;